<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SavingPlatformApplication</name>
    </assembly>
    <members>
        <member name="M:SavingPlatformApplication.Repositories.Contracts.IBaseRepository.GetAllPagedListAsync``1(SavingPlatformApplication.ViewModels.SearchRequest,System.Threading.CancellationToken)">
            <summary>
              Gets a paginated list of all items.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="request">Request with paged components</param>
            <param name="cancellation"></param>
            <returns></returns>
        </member>
        <member name="M:SavingPlatformApplication.Repositories.Contracts.IBaseRepository.GetAllAsync``1(System.Threading.CancellationToken)">
            <summary>
            Get All records of a given entity
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:SavingPlatformApplication.Repositories.Contracts.IBaseRepository.AddAsync``1(``0,System.Threading.CancellationToken)">
            <summary>
            Create an enntity
            </summary>
            <param name="t">Entity is of type T</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:SavingPlatformApplication.Repositories.Contracts.IBaseRepository.ExistsAsync``1(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Check whether an entity of type T exists 
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:SavingPlatformApplication.Repositories.Contracts.IBaseRepository.GetCountAsync``1(System.Threading.CancellationToken)">
            <summary>
            Get the total number of entities
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:SavingPlatformApplication.Repositories.Contracts.IBaseRepository.FindAsync``1(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Find an entity of type T
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:SavingPlatformApplication.Repositories.Contracts.IBaseRepository.UpdateAsync``1(``0,System.Threading.CancellationToken)">
            <summary>
            Update an entity of type T
            </summary>
            <param name="t"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:SavingPlatformApplication.Repositories.Contracts.IBaseRepository.DeleteAsync``1(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete an entity of type T
            </summary>
            <param name="id"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="P:SavingPlatformApplication.ViewModels.SearchPagination.Page">
            <summary>
            Page number
            </summary>
        </member>
        <member name="P:SavingPlatformApplication.ViewModels.SearchPagination.ItemsPerPage">
            <summary>
            Number of requests returned per page
            </summary>
        </member>
        <member name="P:SavingPlatformApplication.ViewModels.SearchPagination.TotalItems">
            <summary>
            Total number of requests
            </summary>
        </member>
    </members>
</doc>
